{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\Yash'sSalesWork\\\\frontend\\\\src\\\\components\\\\CombinedApiTest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombinedApiTest = ({\n  month\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  // Fetch combined data from the backend API\n  useEffect(() => {\n    const fetchCombinedData = async () => {\n      try {\n        setLoading(true);\n        setError(null); // Clear previous errors\n        const response = await axios.get('http://localhost:5000/api/combinedData', {\n          params: {\n            month\n          }\n        });\n        // Check if the API response contains the expected data\n        if (response.data && response.data.sales && response.data.statistics && response.data.pieChart) {\n          setSuccess(true); // Mark as successful if data is valid\n        } else {\n          setSuccess(false); // Mark as failure if response data is incomplete\n        }\n      } catch (error) {\n        console.error('Error fetching combined data:', error);\n        setError('Failed to fetch combined data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCombinedData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3,\n      backgroundColor: '#f7f8fc',\n      borderRadius: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      gutterBottom: true,\n      sx: {\n        color: '#2c3e50',\n        fontWeight: 'bold'\n      },\n      children: [\"Testing Combined API for \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), error && !loading && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      variant: \"h6\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), !loading && !error && success && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"success.main\",\n      children: \"The Combined API is working correctly!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), !loading && !error && !success && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: \"The Combined API is not working correctly. Please check the backend.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CombinedApiTest, \"NCpqYaIuK4JUB1D97dbGxbTwVvg=\");\n_c = CombinedApiTest;\nexport default CombinedApiTest;\nvar _c;\n$RefreshReg$(_c, \"CombinedApiTest\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","CircularProgress","axios","jsxDEV","_jsxDEV","CombinedApiTest","month","_s","loading","setLoading","error","setError","success","setSuccess","fetchCombinedData","response","get","params","data","sales","statistics","pieChart","console","sx","padding","backgroundColor","borderRadius","children","variant","component","gutterBottom","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Downloads/Yash'sSalesWork/frontend/src/components/CombinedApiTest.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, CircularProgress } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst CombinedApiTest = ({month}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  // Fetch combined data from the backend API\r\n  useEffect(() => {\r\n    const fetchCombinedData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null); // Clear previous errors\r\n        const response = await axios.get('http://localhost:5000/api/combinedData', {\r\n          params: { month }\r\n        });\r\n        // Check if the API response contains the expected data\r\n        if (response.data && response.data.sales && response.data.statistics && response.data.pieChart) {\r\n          setSuccess(true); // Mark as successful if data is valid\r\n        } else {\r\n          setSuccess(false); // Mark as failure if response data is incomplete\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching combined data:', error);\r\n        setError('Failed to fetch combined data.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCombinedData();\r\n  }, [month]);\r\n\r\n  return (\r\n    <Box sx={{ padding: 3, backgroundColor: '#f7f8fc', borderRadius: 2 }}>\r\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom sx={{ color: '#2c3e50', fontWeight: 'bold' }}>\r\n        Testing Combined API for {month}\r\n      </Typography>\r\n\r\n      {/* Show loading spinner */}\r\n      {loading && <CircularProgress />}\r\n\r\n      {/* Show error message */}\r\n      {error && !loading && (\r\n        <Typography color=\"error\" variant=\"h6\">\r\n          {error}\r\n        </Typography>\r\n      )}\r\n\r\n      {/* Show success message if API is working */}\r\n      {!loading && !error && success && (\r\n        <Typography variant=\"h6\" color=\"success.main\">\r\n          The Combined API is working correctly!\r\n        </Typography>\r\n      )}\r\n\r\n      {/* Show failure message if API call was not successful */}\r\n      {!loading && !error && !success && (\r\n        <Typography variant=\"h6\" color=\"error\">\r\n          The Combined API is not working correctly. Please check the backend.\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CombinedApiTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}