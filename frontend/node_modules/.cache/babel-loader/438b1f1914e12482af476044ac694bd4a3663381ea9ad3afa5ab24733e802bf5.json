{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\Yash'sSalesWork\\\\frontend\\\\src\\\\components\\\\PieChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Box, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\n\n// Register necessary chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, Title);\nconst PieChart = ({\n  month\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#FF8C33', '#8C33FF', '#33FFF7', '#FF338E', '#F7FF33', '#33FF91'],\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    fetchPieChartData();\n  }, [month]);\n\n  // Fetch data for Pie Chart from API\n  const fetchPieChartData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/pieChart', {\n        params: {\n          month\n        }\n      });\n\n      // The actual data is inside the 'data' field of the response\n      const formattedData = formatPieChartData(response.data.data); // Use response.data.data\n      setChartData(formattedData);\n    } catch (error) {\n      console.error('Error fetching pie chart data:', error);\n    }\n  };\n\n  // Format the fetched data for Pie Chart\n  const formatPieChartData = data => {\n    const categories = [];\n    const itemCounts = [];\n    data.forEach(item => {\n      categories.push(item.range); // Add the price range (category)\n      itemCounts.push(item.count); // Add the number of items in that range\n    });\n    return {\n      labels: categories,\n      datasets: [{\n        data: itemCounts,\n        backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#FF8C33', '#8C33FF', '#33FFF7', '#FF338E', '#F7FF33', '#33FF91'],\n        borderWidth: 1\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3,\n      backgroundColor: '#f7f8fc',\n      borderRadius: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      gutterBottom: true,\n      sx: {\n        color: '#2c3e50',\n        fontWeight: 'bold'\n      },\n      children: [\"Transactions by Category - \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '400px' // Optional: Set a height for the container\n      },\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            title: {\n              display: true,\n              text: `Items Count by Category for ${month}`,\n              font: {\n                size: 18\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: tooltipItem => `${tooltipItem.raw} items` // Show item count in tooltips\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(PieChart, \"cdpkmDaRu0cIPIOmarU1MPmTyaw=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Box","Typography","axios","Chart","ChartJS","ArcElement","Tooltip","Legend","Title","jsxDEV","_jsxDEV","register","PieChart","month","_s","chartData","setChartData","labels","datasets","data","backgroundColor","borderWidth","fetchPieChartData","response","get","params","formattedData","formatPieChartData","error","console","categories","itemCounts","forEach","item","push","range","count","sx","padding","borderRadius","children","variant","component","gutterBottom","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","height","options","responsive","plugins","title","text","font","size","tooltip","callbacks","label","tooltipItem","raw","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Downloads/Yash'sSalesWork/frontend/src/components/PieChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Box, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\r\n\r\n// Register necessary chart components\r\nChartJS.register(ArcElement, Tooltip, Legend, Title);\r\n\r\nconst PieChart = ({ month }) => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        data: [],\r\n        backgroundColor: [\r\n          '#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#FF8C33', '#8C33FF', '#33FFF7', '#FF338E', '#F7FF33', '#33FF91',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPieChartData();\r\n  }, [month]);\r\n\r\n  // Fetch data for Pie Chart from API\r\n  const fetchPieChartData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/pieChart', {\r\n        params: { month },\r\n      });\r\n\r\n      // The actual data is inside the 'data' field of the response\r\n      const formattedData = formatPieChartData(response.data.data); // Use response.data.data\r\n      setChartData(formattedData);\r\n    } catch (error) {\r\n      console.error('Error fetching pie chart data:', error);\r\n    }\r\n  };\r\n\r\n  // Format the fetched data for Pie Chart\r\n  const formatPieChartData = (data) => {\r\n    const categories = [];\r\n    const itemCounts = [];\r\n\r\n    data.forEach((item) => {\r\n      categories.push(item.range);  // Add the price range (category)\r\n      itemCounts.push(item.count);  // Add the number of items in that range\r\n    });\r\n\r\n    return {\r\n      labels: categories,\r\n      datasets: [\r\n        {\r\n          data: itemCounts,\r\n          backgroundColor: [\r\n            '#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#FF8C33', '#8C33FF', '#33FFF7', '#FF338E', '#F7FF33', '#33FF91',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 3, backgroundColor: '#f7f8fc', borderRadius: 2 }}>\r\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom sx={{ color: '#2c3e50', fontWeight: 'bold' }}>\r\n        Transactions by Category - {month}\r\n      </Typography>\r\n\r\n      {/* Center the Pie chart */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '400px', // Optional: Set a height for the container\r\n        }}\r\n      >\r\n        <Pie\r\n          data={chartData}\r\n          options={{\r\n            responsive: true,\r\n            plugins: {\r\n              title: {\r\n                display: true,\r\n                text: `Items Count by Category for ${month}`,\r\n                font: {\r\n                  size: 18,\r\n                },\r\n              },\r\n              tooltip: {\r\n                callbacks: {\r\n                  label: (tooltipItem) => `${tooltipItem.raw} items`, // Show item count in tooltips\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}